{"version":3,"file":"4180-4ad09c808e8b42a1adf2.js","mappings":"sGAAAA,MAAMC,UAAUC,OAAS,CAEvB,QAAW,CACTC,QAAS,uBACTC,QAAQ,GAGV,OAAU,CACRD,QAAS,4DACTC,QAAQ,GAEV,QAAW,6BAEX,SAAY,6BACZ,OAAU,kBAEV,SAAY,iDACZ,YAAe","sources":["webpack://zio-sample-site/./node_modules/prismjs/components/prism-prolog.js"],"sourcesContent":["Prism.languages.prolog = {\n  // Syntax depends on the implementation\n  'comment': {\n    pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n    greedy: true\n  },\n  // Depending on the implementation, strings may allow escaped newlines and quote-escape\n  'string': {\n    pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1(?!\\1)/,\n    greedy: true\n  },\n  'builtin': /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n  // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n  'function': /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n  'number': /\\b\\d+(?:\\.\\d*)?/,\n  // Custom operators are allowed\n  'operator': /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n  'punctuation': /[(){}\\[\\],]/\n};"],"names":["Prism","languages","prolog","pattern","greedy"],"sourceRoot":""}