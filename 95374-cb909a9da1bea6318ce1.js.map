{"version":3,"file":"95374-cb909a9da1bea6318ce1.js","mappings":"wGAAAA,MAAMC,UAAUC,OAASF,MAAMC,UAAUE,OAAO,QAAS,CACvDC,QAAS,CAAC,CACRC,QAAS,kCACTC,YAAY,EACZC,QAAQ,GACP,CACDF,QAAS,mBACTC,YAAY,EACZC,QAAQ,IAEVC,OAAQ,CACNH,QAAS,8DACTE,QAAQ,GAEV,aAAc,CACZF,QAAS,yHACTC,YAAY,EACZG,OAAQ,CACNC,SAAU,QACVC,YAAa,OAGjBC,QAAS,ooBACTC,OAAQ,CAAC,iCAAkC,uBAAwB,oDAAqD,kCACxHH,SAAU,6GACRV,MAAMC,UAAUa,aAAa,SAAU,UAAW,CACpDC,aAAc,CACZV,QAAS,gBACTC,YAAY,EACZU,MAAO,WACPP,OAAQ,CACNQ,UAAW,CACTZ,QAAS,8CACTC,YAAY,EACZU,MAAO,eAIXhB,MAAMC,UAAUa,aAAa,SAAU,cAAe,CACxD,yBAA0B,CACxBT,QAAS,wBACTW,MAAO,aAEPhB,MAAMC,UAAUa,aAAa,SAAU,SAAU,CACnDI,WAAY,CACVb,QAAS,YACTE,QAAQ,EACRE,OAAQ,CACNE,YAAa,YACb,aAAc,CACZN,QAAS,+BACTC,YAAY,GAEd,qBAAsB,CACpBD,QAAS,UACTI,OAAQT,MAAMC,UAAUC,UAI9BiB,KAAM,CACJd,QAAS,4EACTE,QAAQ","sources":["webpack://zio-sample-site/./node_modules/prismjs/components/prism-fsharp.min.js"],"sourcesContent":["Prism.languages.fsharp = Prism.languages.extend(\"clike\", {\n  comment: [{\n    pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: !0,\n    greedy: !0\n  }],\n  string: {\n    pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?/,\n    greedy: !0\n  },\n  \"class-name\": {\n    pattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n    lookbehind: !0,\n    inside: {\n      operator: /->|\\*/,\n      punctuation: /\\./\n    }\n  },\n  keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\\b/,\n  number: [/\\b0x[\\da-fA-F]+(?:LF|lf|un)?\\b/, /\\b0b[01]+(?:uy|y)?\\b/, /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|UL|u[lsy]?)?\\b/],\n  operator: /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n}), Prism.languages.insertBefore(\"fsharp\", \"keyword\", {\n  preprocessor: {\n    pattern: /(^[\\t ]*)#.*/m,\n    lookbehind: !0,\n    alias: \"property\",\n    inside: {\n      directive: {\n        pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n        lookbehind: !0,\n        alias: \"keyword\"\n      }\n    }\n  }\n}), Prism.languages.insertBefore(\"fsharp\", \"punctuation\", {\n  \"computation-expression\": {\n    pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n    alias: \"keyword\"\n  }\n}), Prism.languages.insertBefore(\"fsharp\", \"string\", {\n  annotation: {\n    pattern: /\\[<.+?>\\]/,\n    greedy: !0,\n    inside: {\n      punctuation: /^\\[<|>\\]$/,\n      \"class-name\": {\n        pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n        lookbehind: !0\n      },\n      \"annotation-content\": {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.fsharp\n      }\n    }\n  },\n  char: {\n    pattern: /'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n    greedy: !0\n  }\n});"],"names":["Prism","languages","fsharp","extend","comment","pattern","lookbehind","greedy","string","inside","operator","punctuation","keyword","number","insertBefore","preprocessor","alias","directive","annotation","char"],"sourceRoot":""}