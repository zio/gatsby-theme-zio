{"version":3,"file":"26297-6bcdfb33ed360dd32bf2.js","mappings":"yGAAA,SAAWA,GAGT,IAAIC,EAAU,CACd,wDAAwDC,OAAQ,UAAUA,OAAQ,2BAA2BA,OAE7G,0CAA0CA,QAAQC,KAAK,KACvDH,EAAMI,UAAU,iBAAmB,CACjC,QAAW,CACTC,QAASC,OACT,IAAIJ,OAAS,MACb,kEAAkEA,OAAS,IAG3E,+BAA+BA,OAAU,KACzC,cAAcA,OACd,qFAAqFA,OAAOK,QAAQ,YAAY,WAC9G,OAAON,KACL,KACJO,QAAQ,EACRC,OAAQ,CACN,KAAQ,CAINJ,QAAS,WACTK,MAAO,cACPD,OAAQ,CACN,KAAQ,uCACR,YAAe,IACf,KAAQ,YAGZ,KAAQ,CACNJ,QAAS,uBACTM,YAAY,EACZD,MAAO,gBACPD,OAAQT,EAAMI,UAAUQ,MAE1B,eAAgB,CACdP,QAAS,SACTK,MAAO,eAIb,OAAU,yBAEZV,EAAMI,UAAU,cAAgBJ,EAAMI,UAAwB,aAAIJ,EAAMI,UAAU,iBA/CpF,CAgDGJ","sources":["webpack://zio-sample-site/./node_modules/prismjs/components/prism-shell-session.js"],"sourcesContent":["(function (Prism) {\n  // CAREFUL!\n  // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n  var strings = [// normal string\n  /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source, /'[^']*'/.source, /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source, // here doc\n  // 2 capturing groups\n  /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source].join('|');\n  Prism.languages['shell-session'] = {\n    'command': {\n      pattern: RegExp( // user info\n      /^/.source + '(?:' + ( // <user> \":\" ( <path> )?\n      /[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/.source + '|' + // <path>\n      // Since the path pattern is quite general, we will require it to start with a special character to\n      // prevent false positives.\n      /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) + ')?' + // shell symbol\n      /[$#%](?=\\s)/.source + // bash command\n      /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(/<<str>>/g, function () {\n        return strings;\n      }), 'm'),\n      greedy: true,\n      inside: {\n        'info': {\n          // foo@bar:~/files$ exit\n          // foo@bar$ exit\n          // ~/files$ exit\n          pattern: /^[^#$%]+/,\n          alias: 'punctuation',\n          inside: {\n            'user': /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\n            'punctuation': /:/,\n            'path': /[\\s\\S]+/\n          }\n        },\n        'bash': {\n          pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\n          lookbehind: true,\n          alias: 'language-bash',\n          inside: Prism.languages.bash\n        },\n        'shell-symbol': {\n          pattern: /^[$#%]/,\n          alias: 'important'\n        }\n      }\n    },\n    'output': /.(?:.*(?:[\\r\\n]|.$))*/\n  };\n  Prism.languages['sh-session'] = Prism.languages['shellsession'] = Prism.languages['shell-session'];\n})(Prism);"],"names":["Prism","strings","source","join","languages","pattern","RegExp","replace","greedy","inside","alias","lookbehind","bash"],"sourceRoot":""}