{"version":3,"file":"85159-0af6d10376885a641c6e.js","mappings":"wGAAAA,MAAMC,UAAUC,OAASF,MAAMC,UAAUE,OAAO,QAAS,CACvD,QAAW,CAAC,CACVC,QAAS,kCACTC,YAAY,EACZC,QAAQ,GACP,CACDF,QAAS,mBACTC,YAAY,EACZC,QAAQ,IAEV,OAAU,CACRF,QAAS,8DACTE,QAAQ,GAEV,aAAc,CACZF,QAAS,yHACTC,YAAY,EACZE,OAAQ,CACN,SAAY,QACZ,YAAe,OAGnB,QAAW,ooBACX,OAAU,CAAC,iCAAkC,uBAAwB,oDAAqD,kCAC1H,SAAY,6GAEdP,MAAMC,UAAUO,aAAa,SAAU,UAAW,CAChD,aAAgB,CACdJ,QAAS,gBACTC,YAAY,EACZI,MAAO,WACPF,OAAQ,CACN,UAAa,CACXH,QAAS,8CACTC,YAAY,EACZI,MAAO,eAKfT,MAAMC,UAAUO,aAAa,SAAU,cAAe,CACpD,yBAA0B,CACxBJ,QAAS,wBACTK,MAAO,aAGXT,MAAMC,UAAUO,aAAa,SAAU,SAAU,CAC/C,WAAc,CACZJ,QAAS,YACTE,QAAQ,EACRC,OAAQ,CACN,YAAe,YACf,aAAc,CACZH,QAAS,+BACTC,YAAY,GAEd,qBAAsB,CACpBD,QAAS,UACTG,OAAQP,MAAMC,UAAUC,UAI9B,KAAQ,CACNE,QAAS,4EACTE,QAAQ","sources":["webpack://zio-sample-site/./node_modules/prismjs/components/prism-fsharp.js"],"sourcesContent":["Prism.languages.fsharp = Prism.languages.extend('clike', {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n    lookbehind: true,\n    inside: {\n      'operator': /->|\\*/,\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\\b/,\n  'number': [/\\b0x[\\da-fA-F]+(?:LF|lf|un)?\\b/, /\\b0b[01]+(?:uy|y)?\\b/, /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|UL|u[lsy]?)?\\b/],\n  'operator': /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n});\nPrism.languages.insertBefore('fsharp', 'keyword', {\n  'preprocessor': {\n    pattern: /(^[\\t ]*)#.*/m,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      'directive': {\n        pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  }\n});\nPrism.languages.insertBefore('fsharp', 'punctuation', {\n  'computation-expression': {\n    pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n    alias: 'keyword'\n  }\n});\nPrism.languages.insertBefore('fsharp', 'string', {\n  'annotation': {\n    pattern: /\\[<.+?>\\]/,\n    greedy: true,\n    inside: {\n      'punctuation': /^\\[<|>\\]$/,\n      'class-name': {\n        pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n        lookbehind: true\n      },\n      'annotation-content': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.fsharp\n      }\n    }\n  },\n  'char': {\n    pattern: /'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n    greedy: true\n  }\n});"],"names":["Prism","languages","fsharp","extend","pattern","lookbehind","greedy","inside","insertBefore","alias"],"sourceRoot":""}