{"version":3,"file":"96127-69cc06b11e348804244e.js","mappings":"wGAAAA,MAAMC,UAAUC,MAAQ,CACtBC,QAAS,CAAC,CACRC,QAAS,kCACTC,YAAY,EACZC,QAAQ,GACP,CACDF,QAAS,mBACTC,YAAY,EACZC,QAAQ,IAEVC,SAAU,CAAC,CACTH,QAAS,sCACTC,YAAY,GACX,CACDD,QAAS,2DACTC,YAAY,EACZC,QAAQ,IAEVE,OAAQ,CAAC,CACPJ,QAAS,qBACTE,QAAQ,GACP,CACDF,QAAS,4CACTC,YAAY,EACZC,QAAQ,IAEV,sBAAuB,CACrBF,QAAS,+DACTC,YAAY,EACZC,QAAQ,EACRG,OAAQ,CACNC,cAAe,CACbN,QAAS,mBACTK,OAAQ,CACNE,WAAY,CACVP,QAAS,wBACTC,YAAY,GAEdO,YAAa,cAGjBJ,OAAQ,YAGZK,SAAU,CACRT,QAAS,6CACTC,YAAY,EACZS,MAAO,cAETC,QAAS,qBACTC,QAAS,+EACTC,UAAW,SACXC,SAAU,2BACVC,OAAQ,6CACRC,SAAU,4FACVR,YAAa,iBACZZ,MAAMC,UAAUC,MAAM,uBAAuBO,OAAOC,cAAcD,OAAOE,WAAWF,OAAST,MAAMC,UAAUC","sources":["webpack://zio-sample-site/./node_modules/prismjs/components/prism-bicep.min.js"],"sourcesContent":["Prism.languages.bicep = {\n  comment: [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: !0,\n    greedy: !0\n  }],\n  property: [{\n    pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n    lookbehind: !0\n  }, {\n    pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n    lookbehind: !0,\n    greedy: !0\n  }],\n  string: [{\n    pattern: /'''[^'][\\s\\S]*?'''/,\n    greedy: !0\n  }, {\n    pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n    lookbehind: !0,\n    greedy: !0\n  }],\n  \"interpolated-string\": {\n    pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n    lookbehind: !0,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n        inside: {\n          expression: {\n            pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: !0\n          },\n          punctuation: /^\\$\\{|\\}$/\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  },\n  datatype: {\n    pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n    lookbehind: !0,\n    alias: \"class-name\"\n  },\n  boolean: /\\b(?:false|true)\\b/,\n  keyword: /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n  decorator: /@\\w+\\b/,\n  function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n  number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n  operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n  punctuation: /[{}[\\];(),.:]/\n}, Prism.languages.bicep[\"interpolated-string\"].inside.interpolation.inside.expression.inside = Prism.languages.bicep;"],"names":["Prism","languages","bicep","comment","pattern","lookbehind","greedy","property","string","inside","interpolation","expression","punctuation","datatype","alias","boolean","keyword","decorator","function","number","operator"],"sourceRoot":""}