{"version":3,"file":"93852-f849671a8a84d40c0492.js","mappings":"yGAAC,SAAUA,GACT,SAASC,EAAED,EAAGC,GACZ,OAAOC,OAAOF,EAAEG,QAAQ,WAAY,mEAAoEF,GAG1GD,EAAEI,UAAUC,MAAQ,CAClBC,QAAS,CACPC,QAAS,QAEXC,OAAQ,CACND,QAAS,MACTE,QAAQ,GAEVC,OAAQ,CACNH,QAAS,0BACTE,QAAQ,GAEVE,QAAS,CACPJ,QAASN,EAAE,0CACXW,YAAY,GAEd,gBAAiB,CACfL,QAASN,EAAE,4CACXW,YAAY,EACZC,MAAO,WAET,kBAAmB,CACjBN,QAASN,EAAE,oCACXW,YAAY,EACZC,MAAO,WAETC,KAAM,CAAC,CACLP,QAASN,EAAE,qEACXW,YAAY,EACZC,MAAO,WACN,CACDN,QAASN,EAAE,2DACXW,YAAY,EACZC,MAAO,cAETE,QAAS,CACPR,QAASN,EAAE,yPACXW,YAAY,GAEdI,KAAM,CACJT,QAASN,EAAE,8EACXW,YAAY,GAEdK,OAAQ,CACNV,QAASN,EAAE,uGAAwG,KACnHW,YAAY,GAEdM,YAAa,iBACb,gBAAiB,CACfX,QAAS,0BACTM,MAAO,aAERb,EAAEI,UAAUe,IAAMnB,EAAEI,UAAUC,MAzDlC,CA0DCe","sources":["webpack://zio-sample-site/./node_modules/prismjs/components/prism-kumir.min.js"],"sourcesContent":["!function (n) {\n  function o(n, o) {\n    return RegExp(n.replace(/<nonId>/g, \"\\\\s\\\\x00-\\\\x1f\\\\x22-\\\\x2f\\\\x3a-\\\\x3f\\\\x5b-\\\\x5e\\\\x60\\\\x7b-\\\\x7e\"), o);\n  }\n\n  n.languages.kumir = {\n    comment: {\n      pattern: /\\|.*/\n    },\n    prolog: {\n      pattern: /#.*/,\n      greedy: !0\n    },\n    string: {\n      pattern: /\"[^\\n\\r\"]*\"|'[^\\n\\r']*'/,\n      greedy: !0\n    },\n    boolean: {\n      pattern: o(\"(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)\"),\n      lookbehind: !0\n    },\n    \"operator-word\": {\n      pattern: o(\"(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)\"),\n      lookbehind: !0,\n      alias: \"keyword\"\n    },\n    \"system-variable\": {\n      pattern: o(\"(^|[<nonId>])знач(?=[<nonId>]|$)\"),\n      lookbehind: !0,\n      alias: \"keyword\"\n    },\n    type: [{\n      pattern: o(\"(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\\\\x20*таб)?(?=[<nonId>]|$)\"),\n      lookbehind: !0,\n      alias: \"builtin\"\n    }, {\n      pattern: o(\"(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)\"),\n      lookbehind: !0,\n      alias: \"important\"\n    }],\n    keyword: {\n      pattern: o(\"(^|[<nonId>])(?:алг|арг(?:\\\\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\\\\x20+|_)исп)?|кц(?:(?:\\\\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)\"),\n      lookbehind: !0\n    },\n    name: {\n      pattern: o(\"(^|[<nonId>])[^\\\\d<nonId>][^<nonId>]*(?:\\\\x20+[^<nonId>]+)*(?=[<nonId>]|$)\"),\n      lookbehind: !0\n    },\n    number: {\n      pattern: o(\"(^|[<nonId>])(?:\\\\B\\\\$[\\\\da-f]+\\\\b|(?:\\\\b\\\\d+(?:\\\\.\\\\d*)?|\\\\B\\\\.\\\\d+)(?:e[+-]?\\\\d+)?)(?=[<nonId>]|$)\", \"i\"),\n      lookbehind: !0\n    },\n    punctuation: /:=|[(),:;\\[\\]]/,\n    \"operator-char\": {\n      pattern: /\\*\\*?|<[=>]?|>=?|[-+/=]/,\n      alias: \"operator\"\n    }\n  }, n.languages.kum = n.languages.kumir;\n}(Prism);"],"names":["n","o","RegExp","replace","languages","kumir","comment","pattern","prolog","greedy","string","boolean","lookbehind","alias","type","keyword","name","number","punctuation","kum","Prism"],"sourceRoot":""}