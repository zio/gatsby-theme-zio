{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/1-0-0/services/system","result":{"data":{"mdx":{"id":"181e618d-678d-57fb-bfcb-2d0125617f11","slug":"services/system","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"system\",\n  \"title\": \"System\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"System service contains several useful functions related to system environments and properties. Both of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"system environments\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"system properties\"), \" are key/value pairs. They used to pass user-defined information to our application.\"), mdx(\"p\", null, \"Environment variables are global operating system level variables available to all applications running on the same machine while the properties are application-level variables provided to our application.\"), mdx(\"h2\", null, \"System Environment\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"env\"), \" function retrieve the value of an environment variable:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"import zio.console._\\nimport zio.system._\\nfor {\\n  user <- env(\\\"USER\\\")\\n  _ <- user match {\\n    case Some(value) => putStr(s\\\"The USER env is: $value\\\")\\n    case None => putStr(\\\"Oops! The USER env is not set\\\")\\n  }\\n} yield ()\\n\")), mdx(\"h2\", null, \"System Property\"), mdx(\"p\", null, \"Also, the System service has a `property function to retrieve the value of a system property:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"for {\\n  user <- property(\\\"LOG_LEVEL\\\")\\n  _ <- user match {\\n    case Some(value) => putStr(s\\\"The LOG_LEVEL property is: $value\\\")\\n    case None => putStr(\\\"Oops! The LOG_LEVEL property is not set\\\")\\n  }\\n} yield ()\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core/src/docs/services/system.md"}},"staticQueryHashes":[]}