{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/2-0-0/usecases/index","result":{"data":{"mdx":{"id":"ad2e0ad2-3e40-5ebe-84d1-d6b587114e18","slug":"usecases/","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"usecases_index\",\n  \"title\": \"Summary\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The ZIO library lets you easily solve problems in a variety of areas, including:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"asynchronous.md\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Asynchronous Programming\")), \" \\u2014 Write asynchronous code as easily as synchronous code, handling all errors and never leaking resources.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"concurrency.md\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Concurrent Programming\")), \" \\u2014 Write concurrent code that scales easily, without locks or deadlocks, with maximal laziness and resource safety.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"parallelism.md\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Parallelism\")), \" \\u2014 Trivially partition work among many parallel fibers to make short work of CPU-intensive processing.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"queueing.md\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Queueing\")), \" \\u2014 Build work processing flows and ration scarce resources with powerful asynchronous queues.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"retrying.md\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Retrying\")), \" \\u2014 Create and test robust retry strategies that make your application resilient to transient failures.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"scheduling.md\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Scheduling\")), \" \\u2014 Schedule repeating work, like report generation or email notifications, using flexible, composable schedules.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"streaming.md\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Streaming\")), \" \\u2014 Handle huge or infinite amounts of data in constant heap space with efficient, lazy, concurrent streams.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"testing.md\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Testing\")), \" - Easily test effectual programs with powerful combinators, built-in property based testing, and seamless mocking capabilities.\")), mdx(\"p\", null, \"Explore the pages above and learn how the simple, powerful building blocks in ZIO help you solve problems in these critical areas.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core-2/src/docs/usecases/index.md"}},"staticQueryHashes":[]}