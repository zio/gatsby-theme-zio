{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/2-0-0/about/contributing-to-documentation","result":{"data":{"mdx":{"id":"d079003c-bf9a-5f01-bf0b-9de7d373714f","slug":"about/contributing-to-documentation","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"contributing-to-documentation\",\n  \"title\": \"Contributing to The ZIO Documentation\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The ZIO documentation is provided by a worldwide community, just like the project itself. So if you are reading this page, you can help us to improve the documentation.\"), mdx(\"p\", null, \"Please read the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"contributing.md\"\n  }, \"Contributor Guideline\"), \" before contributing to documentation.\"), mdx(\"h2\", null, \"Toolchain\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The documentation is written in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/Markdown\"\n  }, \"Markdown\"), \" format.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"During the build process of the microsite, we use \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://scalameta.org/mdoc/\"\n  }, \"mdoc\"), \" to type-check code snippets in Markdown.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Our site generator is \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docusaurus.io/\"\n  }, \"Docusaurus\"), \".\")), mdx(\"h2\", null, \"Editing with GitHub Editor\"), mdx(\"p\", null, \"We encourage contributors to use GitHub's editor for making minor changes to existing documents.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"On each page, there is a button called \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Edit this page\"), \", by clicking this button, we will be redirected to the GitHub editor.\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/img/assets/edit-this-page.png\",\n    \"alt\": \"Edit this page\"\n  })), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"After editing the page we can check whether our changes have been formatted correctly or not by using the \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Preview\"), \" tab.\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/img/assets/github-editor.png\",\n    \"alt\": \"GitHub Editor\"\n  })), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"We can scroll to the bottom of the page and write a title and description of the work, and then propose the changes by clicking on \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Propose changes\"), \".\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/img/assets/propose-changes.png\",\n    \"alt\": \"Propose changes\"\n  })), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Our browser will be redirected to a new page titled \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Comparing changes\"), \" after clicking the \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Propose changes\"), \" button. We can compare our changes proposal and then create a pull request by clicking the \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Create pull request\"), \" button.\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/img/assets/comparing-changes.png\",\n    \"alt\": \"Open a pull request\"\n  })), mdx(\"ol\", {\n    \"start\": 5\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"On the new page, we can edit the title and description of our pull request on the new page and finally click \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Create pull request\"), \".\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/img/assets/open-a-pull-request.png\",\n    \"alt\": \"Open a pull request\"\n  })), mdx(\"ol\", {\n    \"start\": 6\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A pull request has been created. Eventually, our work will be reviewed by the rest of the team.\")), mdx(\"h2\", null, \"Editing Documentation Locally\"), mdx(\"p\", null, \"ZIO contributors are encouraged to use this approach for introducing new documentation pages, or when we have lots of improvements on code snippets since we can compile check all changes locally before committing and sending a pull request to the project:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"First, we need to clone the ZIO project on our machine:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git clone git@github.com:zio/zio.git\\ncd zio\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The documentation source code can be found in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docs\"), \" directory and they are all in Markdown format. Now we can begin improving the existing documentation or adding new documentation.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"To generate documentation site from type-checked markdowns we can use the following command:\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sbt docs/mdoc\\n\")), mdx(\"p\", null, \"If one of our snippet codes fails to compile, this command doesn't succeed and will guide us on which line of the documentation caused this error.\"), mdx(\"p\", null, \"It is recommended to run this command with sbt shell with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--watch\"), \" option. This will start a file watcher and livereload on changes. It's useful when we want to see the intermediate results while we are writing documentation:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sbt\\nsbt:docs> docs/mdoc --watch\\n\")), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Finally, by the following command we can serve the microsite locally:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"cd website\\nnpm install\\nnpm run start --watch\\n\")), mdx(\"p\", null, \"It will be served on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://127.0.0.1:3000/\"\n  }, \"localhost\"), \" address.\"), mdx(\"ol\", {\n    \"start\": 5\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"When we are finished with the documentation, we can commit those changes and \", \"[create a pull request]\", \" (contributing.md#create-a-pull-request).\")), mdx(\"h2\", null, \"Giving Feedback\"), mdx(\"p\", null, \"Sometimes we see some problem in the documentation, or we have some idea to make better documentation, but we haven't time or knowledge to do that personally. We can discuss those ideas with the community. There are two ways to do this:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Using Discord (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://discord.gg/2ccFBr4\"\n  }, \"https://discord.gg/2ccFBr4\"), \") is a great way to share our thoughts with others, discuss them, and brainstorm big ideas.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Opening a new issue (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zio/zio/issues/new\"\n  }, \"https://github.com/zio/zio/issues/new\"), \") is appropriate when we have actionable ideas, such as reorganizing a specific page of a documentation, or a problem with the current documentation. \")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core-2/src/docs/about/contributing-to-documentation.md"}},"staticQueryHashes":[]}