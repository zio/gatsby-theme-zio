{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/2-0-0/about/code-of-conduct","result":{"data":{"mdx":{"id":"05a91e0c-fd3d-533a-81be-1dbe0990aa2e","slug":"about/code-of-conduct","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"code-of-conduct\",\n  \"title\": \"ZIO Code of Conduct\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are committed to providing a friendly, safe and welcoming\\nenvironment for all, regardless of level of experience, gender, gender\\nidentity and expression, sexual orientation, disability, personal\\nappearance, body size, race, ethnicity, age, religion, nationality, or\\nother such characteristics.\"), mdx(\"p\", null, \"The ZIO project follows the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.scala-lang.org/conduct/\"\n  }, \"Scala Code of Conduct\"), \", with\\nan additional clause regarding moderation that is detailed below. All participants, contributors and\\nmembers are expected to follow the Scala Code of Conduct when discussing the project on the available\\ncommunication channels. If you are being harassed, please contact us immediately so that we can support you.\"), mdx(\"h2\", null, \"Moderation and Steering Committee\"), mdx(\"p\", null, \"The ZIO project is moderated by the Steering Committee team members:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Itamar Ravid \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/iravid\"\n  }, \"@iravid\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"John De Goes \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jdegoes\"\n  }, \"@jdegoes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Kai \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/neko-kai\"\n  }, \"@neko-kai\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Paul Shirshov \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/pshirshov\"\n  }, \"@pshirshov\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pierre Ricadat \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ghostdogpr\"\n  }, \"@ghostdogpr\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wiem Zine El Abidine \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/wi101\"\n  }, \"@wi101\"))), mdx(\"p\", null, \"The ZIO project requires that drastic moderation actions detailed in the code of\\nconduct - for example, removing a user from the Gitter channel - be agreed upon\\na group of over 2/3rds of the steering committee.\"), mdx(\"p\", null, \"For any questions, concerns, or moderation requests please contact any member of\\nthe project, or the people listed above.\"), mdx(\"h2\", null, \"BDFL\"), mdx(\"p\", null, \"In addition to the above, the ZIO project's BDFL (benevolent dictator for life) is\\nJohn De Goes (@jdegoes), owing to his original founding of the project and continued\\ninvestments in it. While John adheres to the same code of conduct as everyone else,\\nhe is entitled to override moderation decisions made by the steering committee.\"), mdx(\"p\", null, \"We do not take the BDFL position lightly, especially with regards to moderation. John\\nhas consistently shown he is level-headed and able to handle conflict responsibly. Feel\\nfree to reach out to any member of the steering committee, including John himself,\\nwith any concern you might have.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core-2/src/docs/about/code-of-conduct.md"}},"staticQueryHashes":[]}