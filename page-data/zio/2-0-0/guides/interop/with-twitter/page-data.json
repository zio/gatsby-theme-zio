{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/2-0-0/guides/interop/with-twitter","result":{"data":{"mdx":{"id":"f2105359-64e4-5622-a6c5-6a063ee861c2","slug":"guides/interop/with-twitter","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"with-twitter\",\n  \"title\": \"How to Interop with Twitter?\",\n  \"sidebar_label\": \"Twitter's Future\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/zio/interop-twitter\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"interop-twitter\")), \" module provides capability to convert \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://twitter.github.io/util/docs/com/twitter/util/Future.html\"\n  }, \"Twitter \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Future\")), \" into ZIO \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Task\"), \".\"), mdx(\"h3\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"import com.twitter.util.Future\\nimport zio.{ App, Task }\\nimport zio.Console._\\nimport zio.interop.twitter._\\n\\nobject Example extends App {\\n  def run(args: List[String]) = {\\n    val program =\\n      for {\\n        _        <- printLine(\\\"Hello! What is your name?\\\")\\n        name     <- readLine\\n        greeting <- Task.fromTwitterFuture(Task(greet(name)))\\n        _        <- printLine(greeting)\\n      } yield ()\\n\\n    program.exitCode\\n  }\\n\\n  private def greet(name: String): Future[String] = Future.value(s\\\"Hello, $name!\\\")\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core-2/src/docs/guides/interop/with-twitter.md"}},"staticQueryHashes":[]}