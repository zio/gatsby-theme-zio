{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/2-0-0/datatypes/test/environment/test-config","result":{"data":{"mdx":{"id":"bdee40f6-e1af-5192-a2dc-77ea2563f295","slug":"datatypes/test/environment/test-config","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"config\",\n  \"title\": \"TestConfig\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TestConfig\"), \" service provides access to default configuration settings used by ZIO Test:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Repeats \\u2014 The number of times to repeat tests to ensure they are stable.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Retries \\u2014 The number of times to retry flaky tests.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Samples \\u2014 The number of sufficient samples to check for a random variable.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Shrinks \\u2014 The maximum number of \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../gen.md#shrinking\"\n  }, \"shrinkings\"), \" to minimize large failures.\")), mdx(\"p\", null, \"Currently, the live version of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TestEnvironment\"), \" contains the live version of this service with the following configs:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"TestConfig.live(\\n  repeats0 = 100,\\n  retries0 = 100,\\n  samples0 = 200,\\n  shrinks0 = 1000\\n)\\n\")), mdx(\"p\", null, \"So by default, the ZIO Test runner will run tests with this config. Regular users do not need access to this service unless they need to change or access configurations from the ZIO Test environment.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core-2/src/docs/datatypes/test/environment/test-config.md"}},"staticQueryHashes":[]}