{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/2-0-0/datatypes/metrics/metriclabel","result":{"data":{"mdx":{"id":"7dcb7a28-36f2-54f0-9033-8822f43031a1","slug":"datatypes/metrics/metriclabel","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"metriclabel\",\n  \"title\": \"MetricLabel\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MetricLabel\"), \" metadata represents a key-value pair that allows analyzing metrics at an additional level of granularity. For example, if a metric tracks the response time of a service, labels could be used to create separate versions that track response times for different clients. \"), mdx(\"p\", null, \"ZIO Metrics has a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"label based dimensional\"), \" data model where we have a metric name and just a list of key-value pairs attached to that metric name. So labels are the first-class citizen in ZIO Metrics. In monitoring dashboards, we can find or filter metrics using these labels.\"), mdx(\"p\", null, \"For example, we can append following labels (dimensions) to our metric aspects:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Endpoint (/api/users, /api/documents)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HTTP Method (POST, GET)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deployment Environment (Staging, Production)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HTTP Response Code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Error code (404, 503)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Datacenter Zone (us-east, eu-west)\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"import zio._\\nval counter = Metric.counter(\\\"http_requests\\\")\\n  .tagged(\\n    MetricLabel(\\\"env\\\", \\\"production\\\")\\n    MetricLabel(\\\"method\\\", \\\"GET\\\"),\\n    MetricLabel(\\\"endpoint\\\", \\\"/api/users\\\"),\\n    MetricLabel(\\\"zone\\\", \\\"ap-northeast\\\"),\\n  )\\n\")), mdx(\"p\", null, \"By labeling metrics, we can query in a more granular way in monitoring dashboards, such as\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How many requests have been sent to each endpoint in total?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In which zone are we about to violate SLAs?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Which endpoint has the most latency?\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core-2/src/docs/datatypes/metrics/metriclabel.md"}},"staticQueryHashes":[]}