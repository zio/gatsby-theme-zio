{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/2-0-0/datatypes/metrics/summary","result":{"data":{"mdx":{"id":"da490e65-3b43-53e0-8c2a-d9403504a70f","slug":"datatypes/metrics/summary","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"summary\",\n  \"title\": \"Summary\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Summary\"), \" represents a sliding window of a time series along with metrics for certain percentiles of the time series, referred to as quantiles.\"), mdx(\"p\", null, \"Quantiles describe specified percentiles of the sliding window that are of interest. For example, if we were using a summary to track the response time for requests over the last hour then we might be interested in the 50th percentile, 90th percentile, 95th percentile, and 99th percentile for response times.\"), mdx(\"h2\", null, \"Internals\"), mdx(\"p\", null, \"Similar to a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"histogram.md\"\n  }, \"histogram\"), \" a summary also observes \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Double\"), \" values. While a histogram directly modifies the bucket counters and does not keep the individual samples, the summary keeps the observed samples in its internal state. To avoid the set of samples grow uncontrolled, the summary needs to be configured with a maximum age \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"t\"), \" and a maximum size \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"n\"), \". To calculate the statistics, maximal \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"n\"), \" samples will be used, all of which are not older than \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"t\"), \".\"), mdx(\"p\", null, \"Essentially, the set of samples is a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"sliding window\"), \" over the last observed samples matching the conditions above.\"), mdx(\"p\", null, \"A summary is used to calculate a set of quantiles over the current set of samples. A quantile is defined by a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Double\"), \" value \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"q\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0 <= q <= 1\"), \" and resolves to a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Double\"), \" as well.\"), mdx(\"p\", null, \"The value of a given quantile \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"q\"), \" is the maximum value \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"v\"), \" out of the current sample buffer with size \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"n\"), \" where at most \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"q * n\"), \" values out of the sample buffer are less or equal to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"v\"), \".\"), mdx(\"p\", null, \"Typical quantiles for observation are \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0.5\"), \" (the median) and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0.95\"), \". Quantiles are very good for monitoring \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Service Level Agreements\"), \".\"), mdx(\"p\", null, \"The ZIO Metrics API also allows summaries to be configured with an error margin \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"e\"), \". The error margin is applied to the count of values, so that a quantile \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"q\"), \" for a set of size \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"s\"), \" resolves to value \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"v\"), \" if the number \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"n\"), \" of values less or equal to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"v\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"(1 -e)q * s <= n <= (1+e)q\"), \".\"), mdx(\"h2\", null, \"API\"), mdx(\"p\", null, \"TODO\"), mdx(\"h2\", null, \"Use Cases\"), mdx(\"p\", null, \"Like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"histogram.md\"\n  }, \"histograms\"), \", summaries are used for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"monitoring latencies\"), \", but they don't require us to define buckets. So, summaries are the best choice in these situations:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When histograms are not proper for us, in terms of accuracy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When we can't use histograms, as we don't have a good estimation of the range of values\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When we don't need to perform aggregation or averages across multiple instances, as the calculations are done on the application side\")), mdx(\"h2\", null, \"Examples\"), mdx(\"p\", null, \"Create a summary that can hold \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"100\"), \" samples, the max age of the samples is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1 day\"), \" and the error margin is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"3%\"), \". The summary should report the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"10%\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"50%\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"90%\"), \" Quantile. It can be applied to effects yielding an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Int\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"TODO\\n\")), mdx(\"p\", null, \"Now we can apply this aspect to an effect producing an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Int\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"TODO\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core-2/src/docs/datatypes/metrics/summary.md"}},"staticQueryHashes":[]}