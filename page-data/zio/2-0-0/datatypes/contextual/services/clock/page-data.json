{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/2-0-0/datatypes/contextual/services/clock","result":{"data":{"mdx":{"id":"247748c8-d42c-5c79-8dad-e7c93790a67a","slug":"datatypes/contextual/services/clock","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"clock\",\n  \"title\": \"Clock\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Clock service contains some functionality related to time and scheduling. \"), mdx(\"p\", null, \"To get the current time in a specific time unit, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"currentTime\"), \" function takes a unit as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TimeUnit\"), \" and returns \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"UIO[Long]\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"val inMilliseconds: UIO[Long] = Clock.currentTime(TimeUnit.MILLISECONDS)\\nval inDays:        UIO[Long] = Clock.currentTime(TimeUnit.DAYS)\\n\")), mdx(\"p\", null, \"To get current date time in the current timezone the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"currentDateTime\"), \" function returns a ZIO effect containing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OffsetDateTime\"), \".\"), mdx(\"p\", null, \"Also, the Clock service has a very useful functionality for sleeping and creating a delay between jobs. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sleep\"), \" takes a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Duration\"), \" and sleeps for the specified duration. It is analogous to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"java.lang.Thread.sleep\"), \" function, but it doesn't block any underlying thread. It's completely non-blocking.\"), mdx(\"p\", null, \"In the following example we are going to print the current time periodically by placing a one second \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sleep\"), \" between each print call:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"def printTimeForever: ZIO[Any, Throwable, Nothing] =\\n  Clock.currentDateTime.flatMap(Console.printLine(_)) *>\\n    ZIO.sleep(1.seconds) *> printTimeForever\\n\")), mdx(\"p\", null, \"For scheduling purposes like retry and repeats, ZIO has a great data type called \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../misc/schedule.md\"\n  }, \"Schedule\"), \". \"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core-2/src/docs/datatypes/contextual/services/clock.md"}},"staticQueryHashes":[]}