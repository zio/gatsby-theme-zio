{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/2-0-0/datatypes/core/exit","result":{"data":{"mdx":{"id":"74064a38-691d-5f7e-9d0b-d08bc1a62126","slug":"datatypes/core/exit","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"exit\",\n  \"title\": \"Exit\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Exit[E, A]\"), \" value describes how fibers end life. It has two possible values:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Exit.Success\"), \" contain a success value of type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"A\"), \". \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Exit.Failure\"), \" contains a failure \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cause.md\"\n  }, \"Cause\"), \" of type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"E\"), \".\")), mdx(\"p\", null, \"We can call \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"run\"), \" on our effect to determine the Success or Failure of our fiber:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"import zio._\\nimport zio.Console._\\n\\nfor {\\n  successExit <- ZIO.succeed(1).exit\\n  _ <- successExit match {\\n    case Exit.Success(value) =>\\n      printLine(s\\\"exited with success value: ${value}\\\")\\n    case Exit.Failure(cause) =>\\n      printLine(s\\\"exited with failure state: $cause\\\")\\n  }\\n} yield ()\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core-2/src/docs/datatypes/core/exit.md"}},"staticQueryHashes":[]}