{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/2-0-0/resources/ecosystem/community/zio-pulsar","result":{"data":{"mdx":{"id":"8f1a2bc8-bf83-5207-a16e-47ae71757422","slug":"resources/ecosystem/community/zio-pulsar","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"zio-pulsar\",\n  \"title\": \"ZIO Pulsar\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/apache/pulsar\"\n  }, \"ZIO Pulsar\"), \" is the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Apache Pulsar\"), \" client for Scala with ZIO and ZIO Streams integration.\"), mdx(\"h2\", null, \"Introduction\"), mdx(\"p\", null, \"ZIO Pulsar is a purely functional Scala wrapper over the official Pulsar client. Some key features of this library:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Type-safe\"), \" \\u2014 Utilizes Scala type system to reduce runtime exceptions present in the official Java client.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Streaming-enabled\"), \" \\u2014 Naturally integrates with ZIO Streams.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ZIO integrated\"), \" \\u2014 Uses common ZIO primitives like ZIO effect and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ZManaged\"), \" to reduce the boilerplate and increase expressiveness.\")), mdx(\"h2\", null, \"Installation\"), mdx(\"p\", null, \"In order to use this library, we need to add the following line in our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.sbt\"), \" file for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Scala 3\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"libraryDependencies += \\\"com.github.jczuchnowski\\\" %% \\\"zio-pulsar\\\" % \\\"0.1\\\"\\n\")), mdx(\"h2\", null, \"Example\"), mdx(\"p\", null, \"First of all we need to create an instance of \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Apache Pulsar\"), \" and run that:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"docker run -it \\\\\\n  -p 6650:6650 \\\\\\n  -p 8080:8080 \\\\\\n  --mount source=pulsardata,target=/pulsar/data \\\\\\n  --mount source=pulsarconf,target=/pulsar/conf \\\\\\n  --network pulsar \\\\\\n  apachepulsar/pulsar:2.7.0 \\\\\\n  bin/pulsar standalone\\n\")), mdx(\"p\", null, \"Now we can run the following example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"import org.apache.pulsar.client.api.{PulsarClientException, Schema}\\nimport zio._\\nimport zio.blocking._\\nimport zio.clock._\\nimport zio.console._\\nimport zio.pulsar._\\nimport zio.stream._\\n\\nimport java.nio.charset.StandardCharsets\\n\\nobject StreamingExample extends zio.App {\\n  val topic = \\\"my-topic\\\"\\n\\n  val producer: ZManaged[Has[PulsarClient], PulsarClientException, Unit] =\\n    for {\\n      sink <- Producer.make(topic, Schema.STRING).map(_.asSink)\\n      _ <- Stream.fromIterable(0 to 100).map(i => s\\\"Message $i\\\").run(sink).toManaged_\\n    } yield ()\\n\\n  val consumer: ZManaged[Has[PulsarClient] with Blocking with Console, PulsarClientException, Unit] =\\n    for {\\n      builder <- ConsumerBuilder.make(Schema.STRING).toManaged_\\n      consumer <- builder\\n        .subscription(Subscription(\\\"my-subscription\\\", SubscriptionType.Exclusive))\\n        .topic(topic)\\n        .build\\n      _ <- consumer.receiveStream.take(10).foreach { e =>\\n        consumer.acknowledge(e.getMessageId) *>\\n          putStrLn(new String(e.getData, StandardCharsets.UTF_8)).orDie\\n      }.toManaged_\\n    } yield ()\\n\\n  val myApp =\\n    for {\\n      f <- consumer.fork\\n      _ <- producer\\n      _ <- f.join.toManaged_\\n    } yield ()\\n\\n  def run(args: List[String]): URIO[ZEnv, ExitCode] =\\n    myApp\\n      .provideCustom(\\n        (Console.live ++ Clock.live) >+>\\n          PulsarClient.live(\\\"localhost\\\", 6650)\\n      ).useNow.exitCode\\n}\\n\")), mdx(\"h2\", null, \"Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/watch?v=tpwydDqQBmk\"\n  }, \"ZIO World - ZIO PULSAR\"), \" by Jakub Czuchnowski (March 2020) \\u2014 A new library that offers a native, first-class ZIO experience for Pulsar, the Kafka competitor gaining traction for some use cases.\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core-2/src/docs/resources/ecosystem/community/zio-pulsar.md"}},"staticQueryHashes":[]}