{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/2-0-0/resources/ecosystem/community/logstage","result":{"data":{"mdx":{"id":"2ccfdf1e-8ec9-595c-99b8-1415484689ee","slug":"resources/ecosystem/community/logstage","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"logstage\",\n  \"title\": \"LogStage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://izumi.7mind.io/logstage/\"\n  }, \"LogStage\"), \" is a zero-cost structural logging framework for Scala & Scala.js.\"), mdx(\"h2\", null, \"Introduction\"), mdx(\"p\", null, \"Some key features of \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"LogStage\"), \":\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"LogStage extracts structure from ordinary string interpolations in your log messages with zero changes to code.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"LogStage uses macros to extract log structure, it is faster at runtime than a typical reflective structural logging frameworks\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Log contexts\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Console, File, and SLF4J sinks included, File sink supports log rotation,\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Human-readable output and JSON output included,\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Method-level logging granularity. Can configure methods com.example.Service.start and com.example.Service.doSomething independently,\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Slf4J adapters: route legacy Slf4J logs into LogStage router\")), mdx(\"h2\", null, \"Installation\"), mdx(\"p\", null, \"In order to use this library, we need to add the following line in our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.sbt\"), \" file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"// LogStage core library\\nlibraryDependencies += \\\"io.7mind.izumi\\\" %% \\\"logstage-core\\\" % \\\"1.0.8\\\"\\n\")), mdx(\"p\", null, \"There are also some optional modules:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"libraryDependencies ++= Seq(\\n  // Json output\\n  \\\"io.7mind.izumi\\\" %% \\\"logstage-rendering-circe\\\" % \\\"1.0.8\\\",\\n  // Router from Slf4j to LogStage\\n  \\\"io.7mind.izumi\\\" %% \\\"logstage-adapter-slf4j\\\" % \\\"1.0.8\\\",\\n  // LogStage integration with DIStage\\n  \\\"io.7mind.izumi\\\" %% \\\"distage-extension-logstage\\\" % \\\"1.0.8\\\",\\n  // Router from LogStage to Slf4J\\n  \\\"io.7mind.izumi\\\" %% \\\"logstage-sink-slf4j \\\" % \\\"1.0.8\\\",\\n)\\n\")), mdx(\"h2\", null, \"Example\"), mdx(\"p\", null, \"Let's try a simple example of using \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"LogStage\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"import izumi.fundamentals.platform.uuid.UUIDGen\\nimport logstage.LogZIO.log\\nimport logstage.{IzLogger, LogIO2, LogZIO}\\nimport zio.{Has, URIO, _}\\n\\nobject LogStageExample extends zio.App {\\n  val myApp = for {\\n    _ <- log.info(\\\"I'm logging with logstage!\\\")\\n    userId = UUIDGen.getTimeUUID()\\n    _ <- log.info(s\\\"Current $userId\\\")\\n    _ <- log.info(\\\"I'm logging within the same fiber!\\\")\\n    f <- log.info(\\\"I'm logging within a new fiber!\\\").fork\\n    _ <- f.join\\n  } yield ()\\n\\n  val loggerLayer: ULayer[Has[LogIO2[IO]]] =\\n    ZLayer.succeed(LogZIO.withFiberId(IzLogger()))\\n\\n  override def run(args: List[String]): URIO[zio.ZEnv, ExitCode] =\\n    myApp.provide(loggerLayer).exitCode\\n}\\n\")), mdx(\"p\", null, \"The output of this program would be something like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"I 2021-07-26T21:27:35.164 (LogStageExample.scala:8)  \\u2026mpty>.LogStageExample.myApp [14:zio-default-async-1] fiberId=Id(1627318654646,1) I'm logging with logstage!\\nI 2021-07-26T21:27:35.252 (LogStageExample.scala:10)  <.LogStageExample.myApp.8 [14:zio-default-async-1] fiberId=Id(1627318654646,1) Current userId=93546810-ee32-11eb-a393-11bc5b145beb\\nI 2021-07-26T21:27:35.266 (LogStageExample.scala:11)  <.L.myApp.8.10 [14:zio-default-async-1] fiberId=Id(1627318654646,1) I'm logging within the same fiber!\\nI 2021-07-26T21:27:35.270 (LogStageExample.scala:12)  <.L.m.8.10.11 [16:zio-default-async-2] fiberId=Id(1627318655269,2) I'm logging within a new fiber!\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core-2/src/docs/resources/ecosystem/community/logstage.md"}},"staticQueryHashes":[]}