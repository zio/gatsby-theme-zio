{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/2-0-0/resources/ecosystem/community/munit-zio","result":{"data":{"mdx":{"id":"b2901d35-7028-5da3-b667-0832dfd73fb6","slug":"resources/ecosystem/community/munit-zio","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"munit-zio\",\n  \"title\": \"MUnit ZIO\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/poslegm/munit-zio\"\n  }, \"MUnit ZIO\"), \" is an integration library between MUnit and ZIO.\"), mdx(\"h2\", null, \"Introduction\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://scalameta.org/munit/\"\n  }, \"MUnit\"), \" is a Scala testing library that is implemented as a JUnit runner. It has \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"actionable errors\"), \", so the test reports are colorfully pretty-printed, stack traces are highlighted, error messages are pointed to the source code location where the failure happened.\"), mdx(\"p\", null, \"The MUnit ZIO enables us to write tests that return \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ZIO\"), \" values without needing to call any unsafe methods (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Runtime#unsafeRun\"), \").\"), mdx(\"h2\", null, \"Installation\"), mdx(\"p\", null, \"In order to use this library, we need to add the following lines in our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.sbt\"), \" file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"libraryDependencies += \\\"org.scalameta\\\" %% \\\"munit\\\" % \\\"0.7.27\\\" % Test\\nlibraryDependencies += \\\"com.github.poslegm\\\" %% \\\"munit-zio\\\" % \\\"0.0.2\\\" % Test\\n\")), mdx(\"p\", null, \"If we are using a version of sbt lower than 1.5.0, we will also need to add:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"testFrameworks += new TestFramework(\\\"munit.Framework\\\")\\n\")), mdx(\"h2\", null, \"Example\"), mdx(\"p\", null, \"Here is a simple MUnit spec that is integrated with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ZIO\"), \" effect:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"import munit._\\nimport zio._\\n\\nclass SimpleZIOSpec extends ZSuite {\\n  testZ(\\\"1 + 1 = 2\\\") {\\n    for {\\n      a <- ZIO(1)\\n      b <- ZIO(1)\\n    }\\n    yield assertEquals(a + b, 2)\\n  }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core-2/src/docs/resources/ecosystem/community/munit-zio.md"}},"staticQueryHashes":[]}