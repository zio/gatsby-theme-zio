{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/2-0-0/resources/ecosystem/officials/zio-ftp","result":{"data":{"mdx":{"id":"46cf37ae-04df-54d0-b631-1b395bfb3743","slug":"resources/ecosystem/officials/zio-ftp","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"zio-ftp\",\n  \"title\": \"ZIO FTP\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/zio/zio-ftp\"\n  }, \"ZIO FTP\"), \" is a simple, idiomatic (S)FTP client for ZIO.\"), mdx(\"h2\", null, \"Installation\"), mdx(\"p\", null, \"In order to use this library, we need to add the following line in our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.sbt\"), \" file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"libraryDependencies += \\\"dev.zio\\\" %% \\\"zio-ftp\\\" % \\\"0.3.0\\\" \\n\")), mdx(\"h2\", null, \"Example\"), mdx(\"p\", null, \"First we need an FTP server if we don't have:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"docker run -d \\\\\\n    -p 21:21 \\\\\\n    -p 21000-21010:21000-21010 \\\\\\n    -e USERS=\\\"one|1234\\\" \\\\\\n    -e ADDRESS=localhost \\\\\\n    delfer/alpine-ftp-server\\n\")), mdx(\"p\", null, \"Now we can run the example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"import zio.blocking.Blocking\\nimport zio.console.putStrLn\\nimport zio.ftp.Ftp._\\nimport zio.ftp._\\nimport zio.stream.{Transducer, ZStream}\\nimport zio.{Chunk, ExitCode, URIO, ZIO}\\n\\nobject ZIOFTPExample extends zio.App {\\n  private val settings =\\n    UnsecureFtpSettings(\\\"127.0.0.1\\\", 21, FtpCredentials(\\\"one\\\", \\\"1234\\\"))\\n\\n  private val myApp = for {\\n    _        <- putStrLn(\\\"List of files at root directory:\\\")\\n    resource <- ls(\\\"/\\\").runCollect\\n    _        <- ZIO.foreach(resource)(e => putStrLn(e.path))\\n    path = \\\"~/file.txt\\\"\\n    _ <- upload(\\n      path,\\n      ZStream.fromChunk(\\n        Chunk.fromArray(\\\"Hello, ZIO FTP!\\\\nHello, World!\\\".getBytes)\\n      )\\n    )\\n    file <- readFile(path)\\n      .transduce(Transducer.utf8Decode)\\n      .runCollect\\n    _ <- putStrLn(s\\\"Content of $path file:\\\")\\n    _ <- putStrLn(file.fold(\\\"\\\")(_ + _))\\n  } yield ()\\n\\n  override def run(args: List[String]): URIO[zio.ZEnv, ExitCode] = myApp\\n    .provideCustom(\\n      unsecure(settings) ++ Blocking.live\\n    )\\n    .exitCode\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core-2/src/docs/resources/ecosystem/officials/zio-ftp.md"}},"staticQueryHashes":[]}