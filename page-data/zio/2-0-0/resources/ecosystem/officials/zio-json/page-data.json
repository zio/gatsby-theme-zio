{"componentChunkName":"component---node-modules-atooni-gatsby-theme-ziodoc-src-components-simple-js","path":"/zio/2-0-0/resources/ecosystem/officials/zio-json","result":{"data":{"mdx":{"id":"c4bd4f79-8520-5d7a-adb2-8aed8719fcfe","slug":"resources/ecosystem/officials/zio-json","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"id\": \"zio-json\",\n  \"title\": \"ZIO JSON\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/zio/zio-json\"\n  }, \"ZIO Json\"), \" is a fast and secure JSON library with tight ZIO integration.\"), mdx(\"h2\", null, \"Introduction\"), mdx(\"p\", null, \"The goal of this project is to create the best all-round JSON library for Scala:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Performance\"), \" to handle more requests per second than the incumbents, i.e. reduced operational costs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Security\"), \" to mitigate against adversarial JSON payloads that threaten the capacity of the server.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Fast Compilation\"), \" no shapeless, no type astronautics.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Future-Proof\"), \", prepared for Scala 3 and next-generation Java.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Simple\"), \" small codebase, concise documentation that covers everything.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Helpful errors\"), \" are readable by humans and machines.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ZIO Integration\"), \" so nothing more is required.\")), mdx(\"h2\", null, \"Installation\"), mdx(\"p\", null, \"In order to use this library, we need to add the following line in our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.sbt\"), \" file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"libraryDependencies += \\\"dev.zio\\\" %% \\\"zio-json\\\" % \\\"0.1.5\\\"\\n\")), mdx(\"h2\", null, \"Example\"), mdx(\"p\", null, \"Let's try a simple example of encoding and decoding JSON using ZIO JSON:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scala\"\n  }, \"import zio.json._\\n\\nsealed trait Fruit                   extends Product with Serializable\\ncase class Banana(curvature: Double) extends Fruit\\ncase class Apple(poison: Boolean)    extends Fruit\\n\\nobject Fruit {\\n  implicit val decoder: JsonDecoder[Fruit] =\\n    DeriveJsonDecoder.gen[Fruit]\\n\\n  implicit val encoder: JsonEncoder[Fruit] =\\n    DeriveJsonEncoder.gen[Fruit]\\n}\\n\\nval json1         = \\\"\\\"\\\"{ \\\"Banana\\\":{ \\\"curvature\\\":0.5 }}\\\"\\\"\\\"\\nval json2         = \\\"\\\"\\\"{ \\\"Apple\\\": { \\\"poison\\\": false }}\\\"\\\"\\\"\\nval malformedJson = \\\"\\\"\\\"{ \\\"Banana\\\":{ \\\"curvature\\\": true }}\\\"\\\"\\\"\\n\\njson1.fromJson[Fruit]\\njson2.fromJson[Fruit]\\nmalformedJson.fromJson[Fruit]\\n\\nList(Apple(false), Banana(0.4)).toJsonPretty\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"filePath":"/home/runner/work/gatsby-theme-zio/gatsby-theme-zio/example/node_modules/@atooni/zio-core-2/src/docs/resources/ecosystem/officials/zio-json.md"}},"staticQueryHashes":[]}