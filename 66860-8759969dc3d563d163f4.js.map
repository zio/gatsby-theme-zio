{"version":3,"file":"66860-8759969dc3d563d163f4.js","mappings":"wGACAA,MAAMC,UAAUC,MAAQ,CACtB,QAAW,CAAC,CAEVC,QAAS,kCACTC,YAAY,EACZC,QAAQ,GACP,CAEDF,QAAS,mBACTC,YAAY,EACZC,QAAQ,IAEV,SAAY,CAAC,CACXF,QAAS,sCACTC,YAAY,GACX,CACDD,QAAS,2DACTC,YAAY,EACZC,QAAQ,IAEV,OAAU,CAAC,CACTF,QAAS,qBACTE,QAAQ,GACP,CACDF,QAAS,4CACTC,YAAY,EACZC,QAAQ,IAEV,sBAAuB,CACrBF,QAAS,+DACTC,YAAY,EACZC,QAAQ,EACRC,OAAQ,CACN,cAAiB,CACfH,QAAS,mBACTG,OAAQ,CACN,WAAc,CACZH,QAAS,wBACTC,YAAY,GAEd,YAAe,cAGnB,OAAU,YAGd,SAAY,CACVD,QAAS,6CACTC,YAAY,EACZG,MAAO,cAET,QAAW,qBAEX,QAAW,+EACX,UAAa,SACb,SAAY,2BACZ,OAAU,6CACV,SAAY,4FACZ,YAAe,iBAEjBP,MAAMC,UAAUC,MAAM,uBAAuBI,OAAsB,cAAEA,OAAmB,WAAEA,OAASN,MAAMC,UAAUC","sources":["webpack://zio-sample-site/./node_modules/prismjs/components/prism-bicep.js"],"sourcesContent":["// based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\nPrism.languages.bicep = {\n  'comment': [{\n    // multiline comments eg /* ASDF */\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    // singleline comments eg // ASDF\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'property': [{\n    pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n    lookbehind: true\n  }, {\n    pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': [{\n    pattern: /'''[^'][\\s\\S]*?'''/,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'interpolated-string': {\n    pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n        inside: {\n          'expression': {\n            pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'punctuation': /^\\$\\{|\\}$/\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'datatype': {\n    pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n    lookbehind: true,\n    alias: 'class-name'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n  'keyword': /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n  'decorator': /@\\w+\\b/,\n  'function': /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n  'number': /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.bicep['interpolated-string'].inside['interpolation'].inside['expression'].inside = Prism.languages.bicep;"],"names":["Prism","languages","bicep","pattern","lookbehind","greedy","inside","alias"],"sourceRoot":""}