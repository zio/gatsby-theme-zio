{"version":3,"file":"5848-f608e570d08ebdd5d530.js","mappings":"uGAAA,SAAWA,GACT,IAAIC,EAAaD,EAAME,KAAKC,MAAMH,EAAMI,UAAUH,YAClDD,EAAMI,UAAUC,IAAML,EAAMI,UAAUE,OAAO,MAAOL,UAE7CD,EAAMI,UAAUC,IAAe,iBAC/BL,EAAMI,UAAUC,IAAI,oBAI3B,IAAIE,EAAMP,EAAMI,UAAUC,IAAIE,IAC9BA,EAAIC,QAAUC,OAAO,qBAAqBC,OAAS,MAAQH,EAAIC,QAAQE,OAAS,IAAKH,EAAIC,QAAQG,OACjGJ,EAAIK,YAAa,EAXnB,CAYGZ","sources":["webpack://zio-sample-site/./node_modules/prismjs/components/prism-tsx.js"],"sourcesContent":["(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(Prism);"],"names":["Prism","typescript","util","clone","languages","tsx","extend","tag","pattern","RegExp","source","flags","lookbehind"],"sourceRoot":""}