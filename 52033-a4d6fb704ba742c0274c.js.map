{"version":3,"file":"52033-a4d6fb704ba742c0274c.js","mappings":"yGACA,SAAWA,GACT,IAAIC,EAAU,CACZC,QAAS,WACTC,QAAQ,GAENC,EAAe,4CAA4CC,OAC/DL,EAAMM,UAAUC,QAAU,CACxB,QAAWN,EACX,QAAW,CACTC,QAAS,gCACTC,QAAQ,EACRK,OAAQ,CACN,YAAe,UACf,eAAgB,CACdN,QAAS,UACTO,MAAO,cAIb,IAAO,CACLP,QAAS,uBACTC,QAAQ,EACRM,MAAO,aAET,MAAS,CAMPP,QAASQ,OAAO,kBAAkBL,OAClC,MAAQD,EADQ,oBAEP,UAAUC,OAAV,wBACsBD,EADtB,KAEH,sCAAsCC,OAAU,MACtDM,YAAY,EACZR,QAAQ,EACRM,MAAO,aACPD,OAAQ,CACN,QAAWP,EACX,OAAU,CACRC,QAASQ,OAAO,SAASL,OAASD,GAClCO,YAAY,EACZR,QAAQ,GAEV,YAAe,OACf,QAAW,CACTD,QAAS,iCACTC,QAAQ,KAId,YAAe,KApDnB,CAsDGH","sources":["webpack://zio-sample-site/./node_modules/prismjs/components/prism-systemd.js"],"sourcesContent":["// https://www.freedesktop.org/software/systemd/man/systemd.syntax.html\n(function (Prism) {\n  var comment = {\n    pattern: /^[;#].*/m,\n    greedy: true\n  };\n  var quotesSource = /\"(?:[^\\r\\n\"\\\\]|\\\\(?:[^\\r]|\\r\\n?))*\"(?!\\S)/.source;\n  Prism.languages.systemd = {\n    'comment': comment,\n    'section': {\n      pattern: /^\\[[^\\n\\r\\[\\]]*\\](?=[ \\t]*$)/m,\n      greedy: true,\n      inside: {\n        'punctuation': /^\\[|\\]$/,\n        'section-name': {\n          pattern: /[\\s\\S]+/,\n          alias: 'selector'\n        }\n      }\n    },\n    'key': {\n      pattern: /^[^\\s=]+(?=[ \\t]*=)/m,\n      greedy: true,\n      alias: 'attr-name'\n    },\n    'value': {\n      // This pattern is quite complex because of two properties:\n      //  1) Quotes (strings) must be preceded by a space. Since we can't use lookbehinds, we have to \"resolve\"\n      //     the lookbehind. You will see this in the main loop where spaces are handled separately.\n      //  2) Line continuations.\n      //     After line continuations, empty lines and comments are ignored so we have to consume them.\n      pattern: RegExp(/(=[ \\t]*(?!\\s))/.source + // the value either starts with quotes or not\n      '(?:' + quotesSource + '|(?=[^\"\\r\\n]))' + // main loop\n      '(?:' + (/[^\\s\\\\]/.source + // handle spaces separately because of quotes\n      '|' + '[ \\t]+(?:(?![ \\t\"])|' + quotesSource + ')' + // line continuation\n      '|' + /\\\\[\\r\\n]+(?:[#;].*[\\r\\n]+)*(?![#;])/.source) + ')*'),\n      lookbehind: true,\n      greedy: true,\n      alias: 'attr-value',\n      inside: {\n        'comment': comment,\n        'quoted': {\n          pattern: RegExp(/(^|\\s)/.source + quotesSource),\n          lookbehind: true,\n          greedy: true\n        },\n        'punctuation': /\\\\$/m,\n        'boolean': {\n          pattern: /^(?:false|no|off|on|true|yes)$/,\n          greedy: true\n        }\n      }\n    },\n    'punctuation': /=/\n  };\n})(Prism);"],"names":["Prism","comment","pattern","greedy","quotesSource","source","languages","systemd","inside","alias","RegExp","lookbehind"],"sourceRoot":""}