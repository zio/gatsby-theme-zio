{"version":3,"file":"53982-fe6b2d56f567f408a5d8.js","mappings":"yGAAA,SAAWA,GACT,IAAIC,EAAW,gcACfD,EAAME,UAAUC,WAAa,CAC3B,QAAW,CAAC,CAEVC,QAAS,kCACTC,YAAY,GACX,CAGDD,QAAS,2CACTC,YAAY,EACZC,QAAQ,GACP,CAEDF,QAAS,eACTC,YAAY,EACZC,QAAQ,IAEV,SAAY,CAAC,CAEXF,QAAS,sEACTG,OAAQ,CACN,OAAU,CACRH,QAAS,0BACTG,OAAQ,CACN,QAAWN,IAGf,QAAW,CACTG,QAAS,wBAGZ,CAEDA,QAAS,wCACTG,OAAQ,CACN,OAAU,6BAGd,OAAU,CACRH,QAAS,+BACTC,YAAY,EACZE,OAAQ,CACN,SAAY,WAEZ,QAAWN,EACX,OAAU,QACV,YAAe,UAGnB,QAAWA,EACX,OAAU,CAERG,QAAS,gBACTG,OAAQ,CACN,SAAY,UAGhB,IAAO,CACLH,QAAS,iBACTG,OAAQ,CACN,YAAe,OAGnB,YAAe,iBACf,SAAY,gDAEdP,EAAME,UAAUM,SAAWR,EAAME,UAAUC,WApE7C,CAqEGH","sources":["webpack://zio-sample-site/./node_modules/prismjs/components/prism-typoscript.js"],"sourcesContent":["(function (Prism) {\n  var keywords = /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/;\n  Prism.languages.typoscript = {\n    'comment': [{\n      // multiline comments /* */\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true\n    }, {\n      // double-slash comments - ignored when backslashes or colon is found in front\n      // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n      pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // hash comments - ignored when leading quote is found for hex colors in strings\n      pattern: /(^|[^\"'])#.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'function': [{\n      // old include style\n      pattern: /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n      inside: {\n        'string': {\n          pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n          inside: {\n            'keyword': keywords\n          }\n        },\n        'keyword': {\n          pattern: /INCLUDE_TYPOSCRIPT/\n        }\n      }\n    }, {\n      // new include style\n      pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n      inside: {\n        'string': /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n      }\n    }],\n    'string': {\n      pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n      lookbehind: true,\n      inside: {\n        'function': /\\{\\$.*\\}/,\n        // constants include\n        'keyword': keywords,\n        'number': /^\\d+$/,\n        'punctuation': /[,|:]/\n      }\n    },\n    'keyword': keywords,\n    'number': {\n      // special highlighting for indexes of arrays in tags\n      pattern: /\\b\\d+\\s*[.{=]/,\n      inside: {\n        'operator': /[.{=]/\n      }\n    },\n    'tag': {\n      pattern: /\\.?[-\\w\\\\]+\\.?/,\n      inside: {\n        'punctuation': /\\./\n      }\n    },\n    'punctuation': /[{}[\\];(),.:|]/,\n    'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n  };\n  Prism.languages.tsconfig = Prism.languages.typoscript;\n})(Prism);"],"names":["Prism","keywords","languages","typoscript","pattern","lookbehind","greedy","inside","tsconfig"],"sourceRoot":""}