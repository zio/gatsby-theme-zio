{"version":3,"file":"96583-db020293b8e240786bb1.js","mappings":"yGAAC,SAAUA,GACT,SAASC,EAAED,EAAGC,GACZ,OAAOD,EAAEE,QAAQ,cAAc,SAAUF,EAAGG,GAC1C,MAAO,MAAQF,GAAGE,GAAK,OAI3B,SAASA,EAAEH,EAAGG,EAAGC,GACf,OAAOC,OAAOJ,EAAED,EAAGG,GAAIC,GAAK,IAG9B,IAAIA,EAAIC,OAAO,SAAW,qXAAqXC,OAAOJ,QAAQ,KAAM,KAAO,QACvaK,EAAIN,EAAE,6BAA8B,CAAC,wBACrCO,EAAI,CACNC,QAASL,EACTM,YAAa,iBAEXC,EAAI,wBACRX,EAAEY,UAAUC,OAASb,EAAEY,UAAUE,OAAO,QAAS,CAC/CC,QAAS,SACTC,OAAQ,CAAC,CACPC,QAASd,EAAE,oBAAqB,CAACQ,IACjCO,YAAY,EACZC,QAAQ,IAEV,aAAc,CAAC,CACbF,QAASd,EAAE,+CAAgD,CAACI,IAC5DW,YAAY,EACZE,OAAQZ,GACP,CACDS,QAASd,EAAE,qCAAsC,CAACI,IAClDW,YAAY,EACZE,OAAQZ,IAEVC,QAASL,EACTiB,OAAQ,qFACRC,SAAU,+GACVZ,YAAa,qBACXV,EAAEY,UAAUW,aAAa,SAAU,SAAU,CAC/CC,MAAO,CACLP,QAAS,OACTQ,MAAO,cAIX,IAAIC,EAAI,SAAU1B,EAAGC,GACnB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IACrBH,EAAIA,EAAEE,QAAQ,aAAa,WACzB,MAAO,MAAQF,EAAI,OAIvB,OAAOA,EAAEE,QAAQ,YAAa,aAPxB,CAQND,EAAE,mCAAoC,CAACU,KAEzCX,EAAEY,UAAUW,aAAa,SAAU,SAAU,CAC3C,uBAAwB,CACtBN,QAASd,EAAE,kCAAmC,CAACuB,IAC/CP,QAAQ,EACRC,OAAQ,CACNO,cAAe,CACbV,QAASd,EAAE,oCAAqC,CAACuB,IACjDR,YAAY,EACZE,OAAQ,CACNV,YAAa,UACbkB,WAAY,CACVX,QAAS,UACTQ,MAAO,kBACPL,OAAQpB,EAAEY,UAAUC,UAI1BG,OAAQ,cAxEf,CA4ECa,OAAQA,MAAMjB,UAAUkB,GAAKD,MAAMjB,UAAUC","sources":["webpack://zio-sample-site/./node_modules/prismjs/components/prism-qsharp.min.js"],"sourcesContent":["!function (e) {\n  function n(e, n) {\n    return e.replace(/<<(\\d+)>>/g, function (e, r) {\n      return \"(?:\" + n[+r] + \")\";\n    });\n  }\n\n  function r(e, r, a) {\n    return RegExp(n(e, r), a || \"\");\n  }\n\n  var a = RegExp(\"\\\\b(?:\" + \"Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within\".trim().replace(/ /g, \"|\") + \")\\\\b\"),\n      t = n(\"<<0>>(?:\\\\s*\\\\.\\\\s*<<0>>)*\", [\"\\\\b[A-Za-z_]\\\\w*\\\\b\"]),\n      i = {\n    keyword: a,\n    punctuation: /[<>()?,.:[\\]]/\n  },\n      s = '\"(?:\\\\\\\\.|[^\\\\\\\\\"])*\"';\n  e.languages.qsharp = e.languages.extend(\"clike\", {\n    comment: /\\/\\/.*/,\n    string: [{\n      pattern: r(\"(^|[^$\\\\\\\\])<<0>>\", [s]),\n      lookbehind: !0,\n      greedy: !0\n    }],\n    \"class-name\": [{\n      pattern: r(\"(\\\\b(?:as|open)\\\\s+)<<0>>(?=\\\\s*(?:;|as\\\\b))\", [t]),\n      lookbehind: !0,\n      inside: i\n    }, {\n      pattern: r(\"(\\\\bnamespace\\\\s+)<<0>>(?=\\\\s*\\\\{)\", [t]),\n      lookbehind: !0,\n      inside: i\n    }],\n    keyword: a,\n    number: /(?:\\b0(?:x[\\da-f]+|b[01]+|o[0-7]+)|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d*)?)(?:e[-+]?\\d+)?)l?\\b/i,\n    operator: /\\band=|\\bor=|\\band\\b|\\bnot\\b|\\bor\\b|<[-=]|[-=]>|>>>=?|<<<=?|\\^\\^\\^=?|\\|\\|\\|=?|&&&=?|w\\/=?|~~~|[*\\/+\\-^=!%]=?/,\n    punctuation: /::|[{}[\\];(),.:]/\n  }), e.languages.insertBefore(\"qsharp\", \"number\", {\n    range: {\n      pattern: /\\.\\./,\n      alias: \"operator\"\n    }\n  });\n\n  var o = function (e, n) {\n    for (var r = 0; r < 2; r++) {\n      e = e.replace(/<<self>>/g, function () {\n        return \"(?:\" + e + \")\";\n      });\n    }\n\n    return e.replace(/<<self>>/g, \"[^\\\\s\\\\S]\");\n  }(n('\\\\{(?:[^\"{}]|<<0>>|<<self>>)*\\\\}', [s]));\n\n  e.languages.insertBefore(\"qsharp\", \"string\", {\n    \"interpolation-string\": {\n      pattern: r('\\\\$\"(?:\\\\\\\\.|<<0>>|[^\\\\\\\\\"{])*\"', [o]),\n      greedy: !0,\n      inside: {\n        interpolation: {\n          pattern: r(\"((?:^|[^\\\\\\\\])(?:\\\\\\\\\\\\\\\\)*)<<0>>\", [o]),\n          lookbehind: !0,\n          inside: {\n            punctuation: /^\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              alias: \"language-qsharp\",\n              inside: e.languages.qsharp\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  });\n}(Prism), Prism.languages.qs = Prism.languages.qsharp;"],"names":["e","n","replace","r","a","RegExp","trim","t","i","keyword","punctuation","s","languages","qsharp","extend","comment","string","pattern","lookbehind","greedy","inside","number","operator","insertBefore","range","alias","o","interpolation","expression","Prism","qs"],"sourceRoot":""}